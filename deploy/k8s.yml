---
apiVersion: v1
kind: Namespace
metadata:
  name: karto
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: karto
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: karto
  name: karto
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: karto
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: karto
subjects:
  - kind: ServiceAccount
    namespace: karto
    name: karto
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: karto
  namespace: karto
  labels:
    app.kubernetes.io/name: karto
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: karto
  template:
    metadata:
      labels:
        app.kubernetes.io/name: karto
    spec:
      serviceAccountName: karto
      containers:
        - name: app
          imagePullPolicy: Always
          image: zenikalabs/karto
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
            limits:
              cpu: 1000m
              memory: 50Mi
